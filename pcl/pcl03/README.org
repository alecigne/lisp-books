#+title: PCL3

- [[https://github.com/alecigne/lisp-books/commit/bcbf0992038a00776847ef563f96e24da2981204][bcbf099]] :: Implement database without macro.

  A good example of why the ~with-standard-io-syntax~ is useful:

  #+begin_src lisp
    (let ((list '(1 2 3 4 5 6 7 8 9 10))
          (*print-length* 5))
      (print list)
      (with-standard-io-syntax
        (print list)))
  #+end_src

- [[https://github.com/alecigne/lisp-books/commit/77eee71b862492a38fe4c16441058eae9edb7a75][77eee71]] :: Making ~where~ a macro. In [[file:pcl3-nomac.lisp][pcl3-nomac.lisp]], you can see
  two generalized versions of ~where~ (not bound to a "CD" database
  but to a "plist" database) without using a macro, that appear to
  work correctly ðŸ™‚ The arguments to ~where-loop~ and ~where-recur~
  must be coherent.

- [[https://github.com/alecigne/lisp-books/commit/6f6743b544b5cd3cfd175fc8b2dcf58b54092db4][6f6743b]] :: Making ~update~ a macro. Note that this final solution is
  not the one from the book. The result might be questionable. Browse
  the previous version for a solution that's closer to the book.
